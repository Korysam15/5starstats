{"version":3,"sources":["StatCard.tsx","MatchSetCard.tsx","StatPercantageCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StatCard","props","state","count","this","setState","onChange","style","marginLeft","marginRight","width","height","background","borderRadius","color","textAlign","fontSize","fontWeight","fontFamily","title","display","onClick","subtract","cursor","justifyContent","alignItems","alignContent","add","key","React","Component","MatchSetCard","match","set","setMatch","setSet","flexDirection","onFocus","event","target","value","type","backgroundColor","border","uid","StatPercentageCard","appState","currentState","fiveStarScore","game","FiveStarScore","opponentScore","OpponentScore","AcePercentage","pointsEarned","Aces","BlockPercentage","Blocks","KillPercentage","MSPercantage","pointsLost","MissedServes","BEPercentage","BlockingError","HEPercentage","HittingError","AAPercentage","AcesAgainst","Number","parseFloat","toFixed","Kills","className","items","columns","titles","App","Match","Set","extra","BlockingTouch","FreeBalls","historyLog","setAces","bind","setBlocks","setKills","setMissedServes","setBlockingError","setHittingError","setAcesAgainst","setBlockingTouch","setFreeBalls","setFiveStarScore","setOpponentScore","Object","assign","prevState","concat","createNewGame","headers","kills","blocks","blockTouches","blockErrors","aces","missedServes","acesAgainst","hittingErorr","totalPoints","killPer","blockPer","acePer","bePer","msPer","aaPer","hePer","map","index","push","toString","column","String","fromCharCode","f","fileName","Date","toISOString","slice","ws","XLSX","json_to_sheet","header","ws_data","data","val","sheet_add_aoa","origin","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","u","i","marginTop","marginBottom","margin","overflowX","overflowY","whiteSpace","save","export","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.267f2fbb.chunk.js","sourcesContent":["import React from 'react';\n\ninterface IProps {\n    key: string,\n    title: string,\n    marginLeft: number,\n    marginRight: number,\n    count: number, \n    onChange: (count: number) => void\n}\n\ninterface IState {\n    count: number\n}\n\nexport default class StatCard extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            count: props.count\n        }\n    }\n    \n    componentWillReceiveProps(props: IProps) {\n        this.setState({count: props.count});\n\n    }\n\n    subtract() : void {\n        this.props.onChange(this.state.count - 1);\n        this.setState({count: this.state.count - 1});\n    }\n\n    add() : void {\n        this.props.onChange(this.state.count + 1);\n        this.setState({count: this.state.count + 1});\n    }\n\n    render() {\n        return (\n            <div key={this.props.key} style={{marginLeft: this.props.marginLeft, marginRight: this.props.marginRight, width: \"33.33%\", height: \"80%\", background: \"#414141\", borderRadius: 15, color: \"#FFFFFF\"}}>\n                <div style={{height: \"25%\", textAlign: \"center\"}}>\n                    <span style={{fontSize: 28, fontWeight: \"bold\", fontFamily: \"Avenir Next\"}}>{this.props.title}</span>\n                </div>\n                <div style={{display: \"flex\", height: \"75%\"}}>\n                    <div onClick={() => {this.subtract()}} style={{cursor: \"pointer\", width: \"33.33%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", textAlign: \"center\", alignItems: \"center\", alignContent: \"center\"}}>\n                        <h1>-</h1>\n                    </div>\n                    <div style={{width: \"33.33%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", textAlign: \"center\", alignItems: \"center\", alignContent: \"center\"}}>\n                        <h1>{this.state.count}</h1>\n                    </div>\n                    <div onClick={() => {this.add()}} style={{cursor: \"pointer\", width: \"33.33%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", textAlign: \"center\", alignItems: \"center\", alignContent: \"center\"}}>\n                        <h1>+</h1>\n                    </div> \n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n\ninterface IProps {\n    uid: string,\n    marginLeft: number,\n    marginRight: number,\n    setMatch: (match: string) => void,\n    setSet: (set: string) => void,\n}\n\ninterface IState {\n    match: string,\n    set: string,\n}\n\nexport default class MatchSetCard extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        this.state = {\n            match: \"1\",\n            set: \"1\"\n        }\n    }\n\n    setMatch(match: string) : void {\n        this.setState({match: match});\n        this.props.setMatch(match);\n    }\n\n    setSet(set: string) : void {\n        this.setState({set: set});\n        this.props.setSet(set);\n    }\n\n    render() {\n        return (\n            <div key={this.props.uid} style={{marginLeft: this.props.marginLeft, marginRight: this.props.marginRight, width: \"33.33%\", height: \"80%\", background: \"#414141\", borderRadius: 15, color: \"#FFFFFF\"}}>\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", height: \"25%\", textAlign: \"center\"}}>\n                    <div style={{width: \"50%\"}}>\n                        <span style={{fontSize: 28, fontWeight: \"bold\", fontFamily: \"Avenir Next\"}}>Match</span>\n                    </div>\n                    <div style={{width: \"50%\"}}>\n                        <span style={{fontSize: 28, fontWeight: \"bold\", fontFamily: \"Avenir Next\"}}>Set</span>\n                    </div>\n                </div>\n                <div style={{display: \"flex\", height: \"75%\"}}>\n                    <div style={{width: \"50%\"}}>\n                        <input onFocus={() => {this.setState({match: \"\"})}} onChange={(event) => {this.setMatch(event.target.value)}} value={this.state.match} type={\"number\"} style={{width: \"50%\", textAlign: \"center\", height: \"100%\", backgroundColor: \"transparent\", border: \"none\", fontSize: 28, fontWeight: \"bold\", fontFamily: \"Avenir Next\", color: \"white\"}}></input>\n                    </div>\n                    <div style={{width: \"50%\"}}>\n                    <input onFocus={() => {this.setState({set: \"\"})}} onChange={(event) => {this.setSet(event.target.value)}} value={this.state.set} type={\"number\"} style={{width: \"50%\", textAlign: \"center\", height: \"100%\", backgroundColor: \"transparent\", border: \"none\", fontSize: 28, fontWeight: \"bold\", fontFamily: \"Avenir Next\", color: \"white\"}}></input>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport App from './App';\nimport './statpercentagecard.css';\n\ninterface IProps {\n  currentState: App,\n}\n\ninterface IState {\n  AcePercentage: number,\n  BlockPercentage: number,\n  KillPercentage: number,\n  MSPercantage: number,\n  BEPercentage: number,\n  HEPercentage: number,\n  AAPercentage: number\n}\n\nexport default class StatPercentageCard extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n        let appState = props.currentState.state;\n        let fiveStarScore = appState.game.FiveStarScore;\n        let opponentScore = appState.game.OpponentScore;\n        this.state = {\n          AcePercentage: fiveStarScore !== 0 ? (appState.pointsEarned.Aces / fiveStarScore) * 100 : 0,\n          BlockPercentage: fiveStarScore !== 0 ? (appState.pointsEarned.Blocks / fiveStarScore) * 100 : 0,\n          KillPercentage: fiveStarScore !== 0 ? (appState.pointsEarned.Blocks / fiveStarScore) * 100 : 0,\n\n          MSPercantage: opponentScore !== 0 ? (appState.pointsLost.MissedServes / opponentScore) * 100 : 0,\n          BEPercentage: opponentScore !== 0 ? (appState.pointsLost.BlockingError / opponentScore) * 100 : 0,\n          HEPercentage: opponentScore !== 0 ? (appState.pointsLost.HittingError / opponentScore) * 100 : 0,\n          AAPercentage: opponentScore !== 0 ? (appState.pointsLost.AcesAgainst / opponentScore) * 100 : 0,\n        }\n    }\n\n    componentWillReceiveProps(props: IProps) : void {\n      let appState = props.currentState.state;\n      let fiveStarScore = appState.game.FiveStarScore;\n      let opponentScore = appState.game.OpponentScore;\n      \n      this.setState({AcePercentage:  fiveStarScore !== 0 ? Number.parseFloat(((appState.pointsEarned.Aces / fiveStarScore) * 100).toFixed(3)) : 0});\n      this.setState({BlockPercentage:  fiveStarScore !== 0 ? Number.parseFloat(((appState.pointsEarned.Blocks / fiveStarScore) * 100).toFixed(3)) : 0});\n      this.setState({KillPercentage:  fiveStarScore !== 0 ? Number.parseFloat(((appState.pointsEarned.Kills / fiveStarScore) * 100).toFixed(3)) : 0});\n\n      this.setState({MSPercantage:  opponentScore !== 0 ? Number.parseFloat(((appState.pointsLost.MissedServes / opponentScore) * 100).toFixed(3)) : 0});\n      this.setState({BEPercentage:  opponentScore !== 0 ? Number.parseFloat(((appState.pointsLost.BlockingError / opponentScore) * 100).toFixed(3)) : 0});\n      this.setState({HEPercentage:  opponentScore !== 0 ? Number.parseFloat(((appState.pointsLost.HittingError / opponentScore) * 100).toFixed(3)) : 0});\n      this.setState({AAPercentage:  opponentScore !== 0 ? Number.parseFloat(((appState.pointsLost.AcesAgainst / opponentScore) * 100).toFixed(3)) : 0});\n    }\n\n\n    render() {\n        return (\n            <div className=\"stats\">\n            <div style={{width: '100%', height: '50%', textAlign: \"center\"}}>\n              <div style={{height: \"10%\", width: \"100%\"}}>\n              <p className=\"title\" style={{fontFamily: \"Avenir Next\"}}>Points Earned</p>\n              </div>\n              <div className=\"pointEarned\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>Ace %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.AcePercentage}</p>\n                </div>\n              </div>\n              <div className=\"pointEarned\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>Block %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.BlockPercentage}</p>\n                </div>\n              </div>\n              <div className=\"pointEarned\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>Kill %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.KillPercentage}</p>\n                </div>\n              </div>\n            </div>\n            <div style={{width: '100%', height: '50%', textAlign: \"center\"}}>\n              <div style={{height: \"10%\", width: \"100%\"}}>\n                <p className=\"title\" style={{fontFamily: \"Avenir Next\"}}>Points Lost</p>\n              </div>\n              <div className=\"pointLost\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>MS %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.MSPercantage}</p>\n                </div>\n              </div>\n              <div className=\"pointLost\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>BE %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.BEPercentage}</p>\n                </div>\n              </div>\n              <div className=\"pointLost\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>HE %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.HEPercentage}</p>\n                </div>\n              </div>\n              <div className=\"pointLost\">\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>AA %</p>\n                </div>\n                <div className=\"half\">\n                  <p className=\"textContent\" style={{fontFamily: \"Avenir Next\"}}>{this.state.AAPercentage}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport StatCard from './StatCard';\nimport MatchSetCard from './MatchSetCard';\nimport StatPercentageCard from './StatPercantageCard';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nlet items=['Item 1','Item 2','Item 3'];\nlet columns=[\"\", \"\", \"\", \"\"];\nlet titles=[\"Aces\", \"Blocks\", \"Kill\", \"Missed Serves\", \"Blocking Error\", \"Hitting Error\", \"Aces Against\", \"Blocking Touch\", \"Free Balls\", \"5 Star Volleyball\", \"Match/Set\", \"Opponent\"]\n\ninterface IProps {\n\n}\n\ninterface IState { // TODO Update code so we don't duplicate VolleyballStats inside IState. Instead create variable titled volleyballStats of type VolleyballStats\n  pointsEarned: {\n    Aces: number,\n    Blocks: number,\n    Kills: number\n  },\n  pointsLost: {\n    MissedServes: number,\n    BlockingError: number,\n    AcesAgainst: number,\n    HittingError: number,\n  },\n  game: {\n    Match: number,\n    Set: number,\n    FiveStarScore: number,\n    OpponentScore: number\n  },\n  extra: {\n    BlockingTouch: number,\n    FreeBalls: number\n  },\n  historyLog: Array<VolleyballStats>\n}\n\ninterface VolleyballStats {\n  pointsEarned: {\n    Aces: number,\n    Blocks: number,\n    Kills: number\n  },\n  pointsLost: {\n    MissedServes: number,\n    BlockingError: number,\n    AcesAgainst: number,\n    HittingError: number,\n  },\n  game: {\n    Match: number,\n    Set: number,\n    FiveStarScore: number,\n    OpponentScore: number\n  },\n  extra: {\n    BlockingTouch: number,\n    FreeBalls: number\n  },\n}\n\nexport default class App extends React.Component<IProps,IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      pointsEarned: {\n        Aces: 0,\n        Blocks: 0,\n        Kills: 0\n      },\n      pointsLost: {\n        MissedServes: 0,\n        BlockingError: 0,\n        AcesAgainst: 0,\n        HittingError: 0\n      },\n      game: {\n        Match: 1,\n        Set: 1,\n        FiveStarScore: 0,\n        OpponentScore: 0\n      },\n      extra: {\n        BlockingTouch: 0,\n        FreeBalls: 0\n      },\n      historyLog: []\n    }  \n\n    this.setAces = this.setAces.bind(this);\n    this.setBlocks = this.setBlocks.bind(this);\n    this.setKills = this.setKills.bind(this);\n    \n    this.setMissedServes = this.setMissedServes.bind(this);\n    this.setBlockingError = this.setBlockingError.bind(this);\n    this.setHittingError = this.setHittingError.bind(this);\n    this.setAcesAgainst = this.setAcesAgainst.bind(this);\n\n    this.setBlockingTouch = this.setBlockingTouch.bind(this);\n    this.setFreeBalls = this.setFreeBalls.bind(this);\n\n    this.setFiveStarScore = this.setFiveStarScore.bind(this);\n    this.setOpponentScore = this.setOpponentScore.bind(this);\n\n    this.setMatch = this.setMatch.bind(this);\n    this.setSet = this.setSet.bind(this);\n  }\n\n  setAces(count: number) : void {\n    this.setState({pointsEarned: Object.assign(this.state.pointsEarned, {Aces: count})});\n  }\n\n  setBlocks(count: number) : void {\n    this.setState({pointsEarned: Object.assign(this.state.pointsEarned, {Blocks: count})});\n  }\n\n  setKills(count: number) : void {\n    this.setState({pointsEarned: Object.assign(this.state.pointsEarned, {Kills: count})});\n  }\n\n  setMissedServes(count: number) : void {\n    this.setState({pointsLost: Object.assign(this.state.pointsLost, {MissedServes: count})});\n  }\n\n  setBlockingError(count: number) : void {\n    this.setState({pointsLost: Object.assign(this.state.pointsLost, {BlockingError: count})});\n  }\n\n  setHittingError(count: number) : void {\n    this.setState({pointsLost: Object.assign(this.state.pointsLost, {HittingError: count})});\n  }\n\n  setAcesAgainst(count: number) : void {\n    this.setState({pointsLost: Object.assign(this.state.pointsLost, {AcesAgainst: count})});\n  }\n\n  setBlockingTouch(count: number) : void {\n    this.setState({extra: Object.assign(this.state.extra, {BlockingTouch: count})});\n  }\n\n  setFreeBalls(count: number) : void {\n    this.setState({extra: Object.assign(this.state.extra, {FreeBalls: count})});\n  }\n\n  setFiveStarScore(count: number) : void {\n    this.setState({game: Object.assign(this.state.game, {FiveStarScore: count})});\n  }\n\n  setOpponentScore(count: number) : void {\n    this.setState({game: Object.assign(this.state.game, {OpponentScore: count})});\n  }\n\n  setMatch(match: string) : void {\n    this.setState({game: Object.assign(this.state.game, {Match: match})});\n  }\n\n  setSet(set: string) : void {\n    this.setState({game: Object.assign(this.state.game, {Set: set})});\n  }\n\n  save() : void {\n    this.setState((prevState) => {\n      const list = prevState.historyLog.concat(this.createNewGame());\n      return {\n        historyLog: list\n      }\n    })\n  }\n\n  export() : void {\n    let headers: string[] = [\" \"];\n    let kills: string[] = [];\n    let blocks: string[] = [];\n    let blockTouches: string[] = [];\n    let blockErrors: string[] = [];\n    let aces: string[] = [];\n    let missedServes: string[] = [];\n    let acesAgainst: string[] = [];\n    let hittingErorr: string[] = [];\n    let fiveStarScore: string[] = [];\n    let opponentScore: string[] = [];\n    let totalPoints: Array<{}> = []; \n    let killPer: Array<{}> = []; \n    let blockPer: Array<{}> = [];\n    let acePer: Array<{}> = []; \n    let bePer: Array<{}> = []; \n    let msPer: Array<{}> = []; \n    let aaPer: Array<{}> = []; \n    let hePer: Array<{}> = []; \n\n    (this.state.historyLog || []).map((state, index) => {\n      let pointsEarned = state.pointsEarned;\n      let pointsLost = state.pointsLost;\n      let game = state.game;\n      let extra = state.extra;\n      \n      headers.push(\"M\" + game.Match + \" S\" + game.Set);\n      kills.push(pointsEarned.Kills.toString());\n      blocks.push(pointsEarned.Blocks.toString());\n      blockTouches.push(extra.BlockingTouch.toString());\n      blockErrors.push(pointsLost.BlockingError.toString());\n      aces.push(pointsEarned.Aces.toString());\n      missedServes.push(pointsLost.MissedServes.toString());\n      acesAgainst.push(pointsLost.AcesAgainst.toString());\n      hittingErorr.push(pointsLost.HittingError.toString());\n      fiveStarScore.push(game.FiveStarScore.toString());\n      opponentScore.push(game.OpponentScore.toString());\n      \n      let column = String.fromCharCode(index + 66);\n\n      totalPoints.push({f: \"=\" + column + \"10 + \" + column + \"11\"}); // ASCII 'B' is 66\n      killPer.push({f: \"=(\" + column + \"2 / \" + column + \"10) * 100\"});\n      blockPer.push({f: \"=(\" + column + \"3 / \" + column + \"10) * 100\"});\n      acePer.push({f: \"=(\" + column + \"4 / \" + column + \"10) * 100\"});\n      bePer.push({f: \"=(\" + column + \"5 / \" + column + \"11) * 100\"});\n      msPer.push({f: \"=(\" + column + \"6 / \" + column + \"11) * 100\"});\n      aaPer.push({f: \"=(\" + column + \"7 / \" + column + \"11) * 100\"});\n      hePer.push({f: \"=(\" + column + \"8 / \" + column + \"11) * 100\"});\n    });\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const fileName = \"FiveStar-17-\" + new Date().toISOString().slice(0,10);\n\n    let rowTitles = [\"Kills\",\"Blocks\",\"Ace\",\"Block Error\",\"Missed Serves\",\"Ace Against\",\"Hitting Error\",\"Block Touch\",\"5 Star Score\",\"Opponent\",\"Total Points\",\"\",\"OUR POINTS\",\"Kill %\",\"Blocking %\",\"Ace %\",\"\",\"POINTS AGAINT\",\"BE %\",\"MS %\",\"AA %\", \"HE %\"]\n    const ws = XLSX.utils.json_to_sheet([], {header: headers});\n\n    rowTitles.map((title, index) => {\n      let ws_data: Array<Array<String>> = [];\n      let data = [];\n      data.push(title);\n      switch (index) {\n        case 0:\n          kills.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 1:\n          blocks.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 2:\n          aces.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 3:\n          blockErrors.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 4:\n          missedServes.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 5:\n          acesAgainst.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 6:\n          hittingErorr.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 7: \n          blockTouches.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 8:\n          fiveStarScore.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 9:\n          opponentScore.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 10:\n          totalPoints.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 13:\n          killPer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 14:\n          blockPer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 15:\n          acePer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 18:\n          bePer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 19:\n          msPer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 20:\n          aaPer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n        case 21:\n          hePer.map((val, index) => {\n            data.push(val);\n          });\n          break;\n      }\n      ws_data.push(data);\n      XLSX.utils.sheet_add_aoa(ws, ws_data, {origin: index + 1});\n    })\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    FileSaver.saveAs(data, fileName + fileExtension);\n  }\n\n  clear() : void {\n    this.setState({\n      pointsEarned: {\n        Aces: 0,\n        Blocks: 0,\n        Kills: 0\n      },\n      pointsLost: {\n        MissedServes: 0,\n        BlockingError: 0,\n        AcesAgainst: 0,\n        HittingError: 0\n      },\n      game: {\n        Match: this.state.game.Match,\n        Set: this.state.game.Set,\n        FiveStarScore: 0,\n        OpponentScore: 0\n      },\n      extra: {\n        BlockingTouch: 0,\n        FreeBalls: 0\n      }\n    })\n  }\n\n  createNewGame() : VolleyballStats {\n    let pointsEarned = this.state.pointsEarned;\n    let pointsLost = this.state.pointsLost;\n    let game = this.state.game;\n    let extra = this.state.extra;\n\n    let newGame = {\n      pointsEarned: {\n        Aces: pointsEarned.Aces,\n        Blocks: pointsEarned.Blocks,\n        Kills: pointsEarned.Kills\n      },\n      pointsLost: {\n        MissedServes: pointsLost.MissedServes,\n        BlockingError: pointsLost.BlockingError,\n        AcesAgainst: pointsLost.AcesAgainst,\n        HittingError: pointsLost.HittingError\n      },\n      game: {\n        Match: game.Match,\n        Set: game.Set,\n        FiveStarScore: game.FiveStarScore,\n        OpponentScore: game.OpponentScore\n      },\n      extra: {\n        BlockingTouch: extra.BlockingTouch,\n        FreeBalls: extra.FreeBalls\n      }\n    } as VolleyballStats;\n    \n    return newGame;\n  }\n\n  render() {\n    let count = 0;\n    return (\n      <div className=\"container\">\n        <div className=\"board\">\n          {\n            columns.map((u, i) => {\n              let marginTop = 0;\n              let marginBottom = 0;\n              if (i === 0) { \n                marginBottom = -25;\n              }\n              else  {\n                marginTop = -25;\n                marginBottom = -25;\n              }\n              return (\n                // ROW\n                <div key={i} style={{marginTop: marginTop, marginBottom: marginBottom, width: '100%', height: '24%', display: \"flex\", justifyContent: \"space-evenly\", flexDirection: \"row\", textAlign: \"center\"}}> \n                  {\n                    items.map((value, index) => {\n                      let marginLeft = 0;\n                      let marginRight = 0;\n                      if (index === 1) { \n                        marginLeft = 10;\n                        marginRight = 10;\n                      }\n                      let key = titles[count];\n                      count++;\n                      switch(count - 1) {\n                        case 0:\n                          return(\n                            <StatCard onChange={this.setAces} count={this.state.pointsEarned.Aces} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 1:\n                          return(\n                            <StatCard onChange={this.setBlocks} count={this.state.pointsEarned.Blocks} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 2:\n                          return(\n                            <StatCard onChange={this.setKills} count={this.state.pointsEarned.Kills} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 3:\n                          return(\n                            <StatCard onChange={this.setMissedServes} count={this.state.pointsLost.MissedServes} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 4:\n                          return(\n                            <StatCard onChange={this.setBlockingError} count={this.state.pointsLost.BlockingError} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 5:\n                          return(\n                            <StatCard onChange={this.setHittingError} count={this.state.pointsLost.HittingError} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 6:\n                          return(\n                            <StatCard onChange={this.setAcesAgainst} count={this.state.pointsLost.AcesAgainst} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 7:\n                          return(\n                            <StatCard onChange={this.setBlockingTouch} count={this.state.extra.BlockingTouch} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 8:\n                          return(\n                            <StatCard onChange={this.setFreeBalls} count={this.state.extra.FreeBalls} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 9:\n                          return(\n                            <StatCard onChange={this.setFiveStarScore} count={this.state.game.FiveStarScore} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                        case 10:\n                          return(\n                            <MatchSetCard setMatch={this.setMatch} setSet={this.setSet} marginLeft={marginLeft} marginRight={marginRight} uid={key}></MatchSetCard>\n                          )\n                        case 11:\n                          return(\n                            <StatCard onChange={this.setOpponentScore} count={this.state.game.OpponentScore} marginLeft={marginLeft} marginRight={marginRight} key={key} title={key}></StatCard>\n                          )\n                          default: \n                          return (\n                            <h1>SOMETHING IS WRONG</h1>\n                          )\n                      }\n                    })\n                  }\n                </div>\n              )\n            })\n          }\n          <div style={{width: '100%'}}>\n            <p style={{color: \"white\", fontSize: 24, fontWeight: 'bold', margin: 0, fontFamily: \"Avenir Next\", marginLeft: 10}}>History Log</p>\n            <div style={{marginTop: 5, width: '99.5%', overflowX: \"scroll\", overflowY: \"hidden\", whiteSpace: \"nowrap\", display: \"flex\", flexDirection: \"row\"}}>\n              {\n                (this.state.historyLog || []).map((state, index) => {\n                  return (\n                    <div style={{height: \"15%\", width: \"25%\", marginLeft: 10, marginRight: 5, borderRadius: 5, backgroundColor: \"#414141\"}}>\n                      <p style={{color: \"white\", fontSize: 18, fontWeight: 'bold', margin: 5, fontFamily: \"Avenir Next\",textAlign: \"center\"}}>M {state.game.Match} Set {state.game.Set}</p>\n                     </div>\n                )})\n              }\n            </div>\n          </div>\n          <div style={{width: '100%', display: 'flex', justifyContent: 'space-between', flexDirection: \"row\", marginTop: 13.5}}>\n            <div onClick={() => {this.save()}} style={{cursor: \"pointer\", width: \"33.33%\", margin: \"auto\", marginRight: 5, backgroundColor: \"#3C91E6\", borderRadius: 15}}>\n              <p style={{color: \"white\", fontSize: 32, fontWeight: 'bold', margin: 0, fontFamily: \"Avenir Next\", textAlign: \"center\"}}>SAVE</p>\n            </div>\n            <div onClick={() => {this.export()}} style={{cursor: \"pointer\", width: \"33.33%\", margin: \"auto\", marginLeft: 5, marginRight: 5, backgroundColor: \"#439A86\", borderRadius: 15}}>\n              <p style={{color: \"white\", fontSize: 32, fontWeight: 'bold', margin: 0, fontFamily: \"Avenir Next\", textAlign: \"center\"}}>EXPORT</p>\n            </div>\n            <div onClick={() => {this.clear()}} style={{cursor: \"pointer\", width: \"33.33%\", margin: \"auto\", marginLeft: 5, backgroundColor: \"red\", borderRadius: 15}}>\n              <p style={{color: \"white\", fontSize: 32, fontWeight: 'bold', margin: 0, fontFamily: \"Avenir Next\", textAlign: \"center\"}}>CLEAR</p>\n            </div>\n          </div>\n        </div>\n        <StatPercentageCard currentState={this}></StatPercentageCard>\n      </div>\n    )\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}